{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","shift","handleScrollNext","props","images","itemWidth","frameSize","step","infinite","gap","totalWidth","length","containerWidth","setState","handleScrollPrevious","this","exceedDifference","animationDuration","maxScrollNext","style","disabled","width","height","widthImg","transform","transition","className","map","imageSource","src","alt","slice","type","onClick","React","Component","App","handleChange","event","stateName","stateProperty","target","value","handleInfinite","infiniteStatus","method","name","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.351e2319.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n  gap: number,\n  images: string[],\n}\n\ntype State = {\n  shift: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    shift: 0,\n  };\n\n  componentDidUpdate() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      gap,\n    } = this.props;\n\n    const { shift } = this.state;\n\n    const totalWidth = (\n      (itemWidth * images.length) + ((gap * images.length) - gap)\n    );\n\n    const containerWidth = frameSize * (itemWidth + gap) - gap;\n    const exceed = totalWidth < (shift + containerWidth);\n    const exceedDifference = (shift + containerWidth) - totalWidth;\n\n    if (exceed) {\n      this.setState({ shift: shift - exceedDifference });\n\n      return;\n    }\n\n    if (shift < 0) {\n      this.setState({ shift: 0 });\n    }\n  }\n\n  handleScrollNext = () => {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      infinite,\n      gap,\n    } = this.props;\n\n    const { shift } = this.state;\n\n    const totalWidth = (\n      (itemWidth * images.length) + ((gap * images.length) - gap)\n    );\n\n    const containerWidth = frameSize * (itemWidth + gap) - gap;\n\n    this.setState({ shift: shift + ((itemWidth + gap) * step) });\n\n    if ((shift + containerWidth === totalWidth) && infinite) {\n      this.setState({ shift: 0 });\n    }\n  };\n\n  handleScrollPrevious = () => {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      infinite,\n      gap,\n    } = this.props;\n\n    const { shift } = this.state;\n\n    const totalWidth = (\n      (itemWidth * images.length) + ((gap * images.length) - gap)\n    );\n\n    const containerWidth = frameSize * (itemWidth + gap) - gap;\n\n    if (shift <= 0 && infinite) {\n      this.setState({ shift: totalWidth - containerWidth });\n\n      return;\n    }\n\n    this.setState({ shift: shift - ((itemWidth + gap) * step) });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n      gap,\n    } = this.props;\n\n    const { shift } = this.state;\n\n    const totalWidth = (\n      (itemWidth * images.length) + ((gap * images.length) - gap)\n    );\n\n    const containerWidth = frameSize * (itemWidth + gap) - gap;\n\n    const maxScrollNext = totalWidth - containerWidth;\n\n    const style = {\n      disabled: {\n        disabled: true,\n      },\n\n      width: {\n        width: `${containerWidth}px`,\n        height: `${itemWidth}px`,\n      },\n\n      widthImg: {\n        width: `${itemWidth}px`,\n      },\n\n      shift: {\n        transform: `translateX(${-shift}px)`,\n        transition: `transform ${animationDuration}ms`,\n        gap,\n      },\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel__container\" style={style.width}>\n          <ul className=\"Carousel__list\" style={style.shift}>\n            {images.map(\n              imageSource => (\n                <li\n                  key={imageSource.slice(-5, -4)}\n                  className=\"list-Emojie\"\n                >\n                  <img\n                    src={imageSource}\n                    alt={`emojie${imageSource.slice(-5, -4)}`}\n                    style={style.widthImg}\n                  />\n                </li>\n              ),\n            )}\n          </ul>\n        </div>\n        <div className=\"Buttons__scroll\">\n          <button\n            type=\"button\"\n            onClick={this.handleScrollPrevious}\n            {...shift <= 0 && !infinite && style.disabled}\n          >\n            <span>Prev</span>\n          </button>\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.handleScrollNext}\n            {...shift >= maxScrollNext && !infinite && style.disabled}\n          >\n            <span>Next</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n  gap: number,\n  images: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    gap: 10,\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    stateName: string,\n  ) => {\n    const stateProperty = {\n      [stateName]: +event.target.value,\n    } as unknown as Pick<State, keyof State>;\n\n    this.setState(stateProperty);\n  };\n\n  handleInfinite = () => {\n    const infiniteStatus = this.state.infinite;\n\n    this.setState({ infinite: !infiniteStatus });\n  };\n\n  render() {\n    const {\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n      gap,\n      images,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          gap={gap}\n        />\n\n        <form method=\"get\" className=\"form\">\n          Width:\n          <input\n            className=\"input\"\n            type=\"number\"\n            value={itemWidth}\n            name=\"itemWidth\"\n            min=\"100\"\n            max=\"200\"\n            onChange={(event) => this.handleChange(event, 'itemWidth')}\n          />\n\n          Frame Size:\n          <input\n            className=\"input frameSizeInput\"\n            type=\"number\"\n            value={frameSize}\n            name=\"frameSize\"\n            onChange={(event) => this.handleChange(event, 'frameSize')}\n            min=\"1\"\n            max={images.length}\n          />\n\n          Step:\n          <input\n            className=\"input stepInput\"\n            type=\"number\"\n            value={step}\n            name=\"frameSize\"\n            onChange={(event) => this.handleChange(event, 'step')}\n            min=\"1\"\n            max={images.length}\n          />\n\n          Aimation:\n          <input\n            className=\"input\"\n            type=\"number\"\n            value={animationDuration}\n            name=\"animationDuration\"\n            onChange={(event) => this.handleChange(event, 'animationDuration')}\n            min=\"0\"\n          />\n\n          Infinite:\n          <input\n            className=\"input\"\n            type=\"checkbox\"\n            name=\"infinite\"\n            onChange={this.handleInfinite}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}